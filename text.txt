Type '{ labels: string[]; datasets: ({ label: string; data: { x: string; y: number; }[]; borderColor: string; tension: number; cubicInterpolationMode?: undefined; backgroundColor?: undefined; fill?: undefined; } | { ...; } | { ...; })[]; }' is not assignable to type 'ChartData<"line", { x: string; y: number; }[], string>'.
  Types of property 'datasets' are incompatible.
    Type '({ label: string; data: { x: string; y: number; }[]; borderColor: string; tension: number; cubicInterpolationMode?: undefined; backgroundColor?: undefined; fill?: undefined; } | { label: string; data: { ...; }[]; ... 4 more ...; fill?: undefined; } | { ...; })[]' is not assignable to type 'ChartDataset<"line", { x: string; y: number; }[]>[]'.
      Type '{ label: string; data: { x: string; y: number; }[]; borderColor: string; tension: number; cubicInterpolationMode?: undefined; backgroundColor?: undefined; fill?: undefined; } | { label: string; data: { ...; }[]; ... 4 more ...; fill?: undefined; } | { ...; }' is not assignable to type 'ChartDataset<"line", { x: string; y: number; }[]>'.
        Type '{ label: string; data: { x: string; y: number; }[]; cubicInterpolationMode: string; borderColor: string; tension: number; backgroundColor?: undefined; fill?: undefined; }' is not assignable to type 'ChartDataset<"line", { x: string; y: number; }[]>'.
          Type '{ label: string; data: { x: string; y: number; }[]; cubicInterpolationMode: string; borderColor: string; tension: number; backgroundColor?: undefined; fill?: undefined; }' is not assignable to type '_DeepPartialObject<{ type: "line"; } & LineControllerDatasetOptions & FillerControllerDatasetOptions>'.
            Types of property 'cubicInterpolationMode' are incompatible.
              Type 'string' is not assignable to type '"default" | "monotone" | ((ctx: ScriptableContext<"line">, options: AnyObject) => "default" | "monotone" | undefined) | undefined'.ts(2322)
types.d.ts(13, 5): The expected type comes from property 'data' which is declared here on type 'IntrinsicAttributes & Omit<ChartProps<"line", { x: string; y: number; }[], string>, "type"> & { ref?: ForwardedRef<ChartJSOrUndefined<"line", { x: string; y: number; }[], string>> | undefined; }'